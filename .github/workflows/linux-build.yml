name: Linux build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  linux-build:
    name: Linux build job
    runs-on: ubuntu-latest
    container: docker.io/centos:latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: update yum repo baseurl
        run: |
          sed -i s/mirror.centos.org/vault.centos.org/g /etc/yum.repos.d/*.repo
          sed -i s/^#.*baseurl=http/baseurl=http/g /etc/yum.repos.d/*.repo
          sed -i s/^mirrorlist=http/#mirrorlist=http/g /etc/yum.repos.d/*.repo
          # yum clean all
          # yum makecache

      - name: install deps
        run: |
          yum install -y openssl-devel wget tar gcc gcc-c++ libuuid-devel automake autoconf libtool make git cmake python2
          ln -s /usr/bin/python2 /usr/bin/python

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
        
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: Compile core lib code
        run: |
          make core_lib config=debug64 -j4
          make core_lib config=release64 -j4

      - name: Compile testsuite
        run: |
          make test config=debug64 -j4
          make test config=release64 -j4

      - name: Compile quick_start
        run: |
          make quick_start config=debug64 -j4
          make quick_start config=release64 -j4

      - name: Compile pyllbc lib code
        run: |
          make py_wrap config=debug64 -j4
          make py_wrap config=release64 -j4

      - name: Compile lullbc lib code
        run: |
          make lu_wrap config=debug64 -j4
          make py_wrap config=release64 -j4

      - name: Build all target by cmake
        run: |
          mkdir cmake_build
          cd cmake_build
          cmake ..
          make -j4
        
      - run: echo "üçè This job's status is ${{ job.status }}."
