name: Linux build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  linux-build:
    name: Linux build job
    runs-on: ubuntu-latest
    container: docker.io/centos:7
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: install deps
        run: yum install -y openssl-devel wget tar gcc gcc-c++ libuuid libuuid-devel automake autoconf libtool make

      - name : install cmake
        run: wget https://github.com/Kitware/CMake/releases/download/v3.27.0/cmake-3.27.0-linux-x86_64.tar.gz && tar -zxvf cmake-3.27.0-linux-x86_64.tar.gz && mv cmake-3.27.0-linux-x86_64 /usr/local/cmake && ln -s /usr/local/cmake/bin/* /usr/local/bin/

      - name: install git
        run: |
          yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
          yum install -y git
          echo "git version:`git --version`"
      
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: "true"
        
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: Compile core lib code
        run: |
          make core_lib config=debug64 -j4
          make core_lib config=release64 -j4

      - name: Compile test code
        run: |
          make test config=debug64 -j4
          make test config=release64 -j4

      - name: Compile pyllbc lib code
        run: |
          make py_wrap config=debug64 -j4
          make py_wrap config=release64 -j4

      - name: Compile lullbc lib code
        run: |
          make lu_wrap config=debug64 -j4
          make py_wrap config=release64 -j4

      - name: Build all target by cmake
        run: |
          mkdir cmake_build
          cd cmake_build
          cmake ..
          make -j 4
        
      - run: echo "🍏 This job's status is ${{ job.status }}."
